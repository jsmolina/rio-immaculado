name: Compile Allegro 4 Project

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc
          sudo apt-get install bison flex curl gcc g++ make texinfo zlib1g-dev g++ unzip
      
      - name: Clone djgpp
        run: |
          git clone https://github.com/andrewwutw/build-djgpp.git

      - name: Clone Allegro 4
        run: |
          git clone https://github.com/msikma/allegro-4.2.2-xc.git
          cd allegro-4.2.2-xc

      - name: Cachear Directorios
        uses: actions/cache@v4
        with:
          path: |
            build-djgpp
            allegro-4.2.2-xc
          key: ${{ runner.os }}-compilacion
          restore-keys: |
            ${{ runner.os }}-compilacion

      - name: Compile djgpp
        run: | 
          cd build-djgpp
          sudo ./build-djgpp.sh 12.2.0

      - name: Compile Allegro 4
        run: |
          cd allegro-4.2.2-xc
          ./xmake.sh lib

      - name: Compile your project
        run: |
          # Aqu√≠ van los comandos para compilar tu proyecto que utiliza Allegro 4
          cd vendor
          rm -f allegro-4.2.2-xc
          ln -s ../allegro-4.2.2-xc allegro-4.2.2-xc
          cd ..
          cd static
          gcc dat2.c -o dat2
          cd ..
          export PATH=/usr/local/djgpp/i586-pc-msdosdjgpp/bin:$PATH
          export DJDIR=/usr/local/djgpp/i586-pc-msdosdjgpp
          export DJGPP_CC=/usr/local/djgpp/bin/i586-pc-msdosdjgpp-gcc
          sudo apt-get install imagemagick
          sudo ln -s /usr/bin/convert /usr/bin/magick
          make clean && make
      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          extra_assets: "dist/*"
